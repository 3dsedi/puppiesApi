{"version":3,"file":"test.js","sourceRoot":"","sources":["../test.ts"],"names":[],"mappings":";;;;;AAAA,0DAAgC;AAChC,gDAAwB;AAIxB,2CAA2C;AAC3C,oDAAoD;AACpD,0DAA0D;AAC1D,2CAA2C;AAC3C,iCAAiC;AACjC,0BAA0B;AAC1B,UAAU;AACV,QAAQ;AACR,MAAM;AAEN,2CAA2C;AAC3C,oDAAoD;AACpD,0DAA0D;AAC1D,2CAA2C;AAC3C,oDAAoD;AACpD,UAAU;AACV,QAAQ;AAEN,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAO,EAAC,aAAG,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACnD,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAO,EAAC,aAAG,CAAC,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACvD,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;YACvB,EAAE,EAAE,GAAG,EAAG,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,YAAY;SAClE,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAO,EAAC,aAAG,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACxD,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAC9B,4CAA4C,CAC7C,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAO,EAAC,aAAG,CAAC;aAC3B,IAAI,CAAC,cAAc,CAAC;aACpB,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,kDAAkD;AAClD,6DAA6D;AAC7D,2CAA2C;AAC3C,uEAAuE;AACvE,QAAQ","sourcesContent":["import request from 'supertest';\r\nimport app from './app';\r\n\r\nimport PUPPIES from './app'\r\n\r\n// describe('Testing api endpoint', () => {\r\n//   test('sanity check for /puppies', async () => {\r\n//     const res = await request(app).get('/api/puppies');\r\n//     expect(res.statusCode).toEqual(200);\r\n//     expect(res.body).toEqual({\r\n//       puppies: PUPPIES,\r\n//     });\r\n//   });\r\n// });\r\n\r\n// describe('Testing api endpoint', () => {\r\n//   test('sanity check for /puppies', async () => {\r\n//     const res = await request(app).get('/api/puppies');\r\n//     expect(res.statusCode).toEqual(200);\r\n//       expect(res.body.length).toBeGreaterThan(0);\r\n//     });\r\n//   });\r\n\r\n  describe('Testing api endpoints2', () => {\r\n    test('get all puppies endpoint2', async () => {\r\n      const res = await request(app).get('/api/puppies');\r\n      expect(res.statusCode).toEqual(200);\r\n      expect(res.body[0]).toHaveProperty('name');\r\n      expect(res.body).toHaveLength(10);\r\n    });\r\n    test('check for puppy with param.id of 123', async () => {\r\n      const res = await request(app).get('/api/puppies/123');\r\n      expect(res.statusCode).toEqual(200);\r\n      expect(res.body).toEqual({\r\n        id: 123 , breed: 'husky', name:'snow man', birthDate:'21.09.1986'\r\n      });\r\n    });\r\n\r\n    test('delete puppy with id of 124', async () => {\r\n      const res = await request(app).delete('/api/puppies/1');\r\n      expect(res.statusCode).toEqual(200);\r\n      expect(res.body.message).toEqual(\r\n        '( id:124  Name:SAG ) removed from database',\r\n      );\r\n    });\r\n   \r\n    test('post new puppy', async () => {\r\n      const res = await request(app)\r\n        .post('/api/puppies')\r\n        .send({ breed: 'sarabi', name: 'fery', birthdate: '21-09-2020' });\r\n      expect(res.headers['content-type']).toMatch(/json/);\r\n      expect(res.statusCode).toEqual(201);\r\n      expect(res.body.name).toEqual('fery');\r\n    });\r\n  }); \r\n  // test('responds with status 404 ', async () => {\r\n  //     const res = await request(app).get('/api/puppies/50');\r\n  //     expect(res.statusCode).toEqual(404);\r\n  //     expect(res.body.message).toEqual('Puppy not found in database');\r\n  //   });"]}